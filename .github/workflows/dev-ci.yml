name: Dev Tests

on:
  push:
    branches:
      - "!staging"
      - "!master"

env:
  PROJECT_NAME: becas-portal
  REGISTRY_BASE: us-docker.pkg.dev/${{ secrets.GCP_PROJECT }}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['7.4','8.0']

    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v5

      - name: Use PHP ${{ matrix.php-version }} for tests
      - uses: php-actions/phpunit@v3
        with:
          php_version: ${{ matrix.php-version }}
          configuration: ./phpunit.xml

  build:
    needs: ["test"]
    runs-on: ubuntu-latest
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_BASE}}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY_BASE}}/${{env.PROJECT_NAME}}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}-dev:${{ env.GITHUB_REF_SLUG }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - id: deploy
        uses: google-github-actions/deploy-cloudrun@main
        with:
          image: ${{ env.REGISTRY_BASE}}/${{env.PROJECT_NAME}}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}-dev:${{ env.GITHUB_REF_SLUG }}
          service: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}-dev
          credentials: ${{ secrets.GAR_JSON_KEY }}
          region: ${{ secrets.GCP_REGION }}
          env_vars: |
          APP_NAME=${{ secrets.APP_NAME }},
          APP_KEY=${{ secrets.APP_KEY }},
          APP_URL=${{ secrets.APP_URL }},
          DB_HOST=${{ secrets.DB_HOST }},
          DB_PORT=${{ secrets.DB_PORT }},
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }},
          DB_PASSWORD=${{ secrets.DB_PASSWORD }},
          GOOGLE_CLOUD_PROJECT_ID=${{ secrets.GCP_PROJECT }},
          GOOGLE_CLOUD_KEY_FILE=${{ secrets.GAR_JSON_KEY }},
          GOOGLE_CLOUD_STORAGE_BUCKET=${{ secrets.GCP_BUCKET }}

      # Example of using the output
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}"
